@use "sass:math";

@import "@sixa/wp-style-utils/src/flexbox";
@import "@sixa/wp-style-utils/src/dim-background";

/**
 * The following styles get applied both on the front of your site
 * and in the editor.
 */

$prefix: sixa;

.wp-block-#{$prefix}-container {
	@include box(center, middle);
	background-position: center center;
	background-repeat: no-repeat;
	background-size: cover;
	position: relative;

	/* This block has customizable padding, border-box makes that more predictable. */
	box-sizing: border-box;

	&.has-parallax {
		background-attachment: fixed;

		/*
         * Mobile Safari does not support fixed background attachment properly.
         * See also https://stackoverflow.com/questions/24154666/background-size-cover-not-working-on-ios
         * Chrome on Android does not appear to support the attachment at all: https://issuetracker.google.com/issues/36908439
         */
		@supports (-webkit-overflow-scrolling: touch) {
			background-attachment: scroll;
		}

		/* Remove the appearance of scrolling based on OS-level animation preferences. */
		@media (prefers-reduced-motion: reduce) {
			background-attachment: scroll;
		}
	}

	&.is-repeated {
		background-repeat: repeat;
		background-size: auto;
	}

	&__content {
		position: relative;
		z-index: 1;
	}

	&__title {
		left: var(--#{$prefix}-title-left, 15px);
		position: absolute;
		writing-mode: vertical-lr;
		z-index: 2;
	}

	&__video-background {
		border: none;
		box-shadow: none;
		height: 100%;
		left: 0;
		max-height: none;
		max-width: none;
		object-fit: cover;
		outline: none;
		position: absolute;
		top: 0;
		width: 100%;
	}

	&__gradient-background {
		bottom: 0;
		left: 0;
		opacity: 0.5;
		position: absolute;
		right: 0;
		top: 0;
		z-index: 1;
		$i: 10;

		@while $i <= 100 {
			.has-background-dim-#{$i} & {
				opacity: math.div($i, 100);
			}
			$i: $i + 10;
		}
	}

	&.is-full-height {
		min-height: 100vh;
	}

	&.has-background-dim {
		&:not([class*="-background-color"]) {
			background-color: #000;
		}
	}

	&.has-background-size {
		&-auto {
			background-size: auto;
		}

		&-contain {
			background-size: contain;
		}
	}

	@each $horizontal, $justify in (left, flex-start), (center, center), (right, flex-end) {
		@each $vertical, $align in (top, flex-start), (center, center), (bottom, flex-end), {
			&.is-position-#{$vertical}-#{$horizontal} {
				align-items: #{$align};
				justify-content: #{$justify};
			}
		}
	}
}
